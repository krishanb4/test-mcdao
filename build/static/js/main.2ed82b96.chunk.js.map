{"version":3,"sources":["config/constants/tokens.ts","utils/makeBatchRequest.ts","components/UnlockButton.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","config/constants/types.ts","config/constants/endpoints.ts","hooks/useRefresh.ts","hooks/useAuth.ts","components/Tags.tsx","utils/getRpcUrl.ts","utils/wallet.ts","config/constants/index.ts","config/constants/teams.ts","state/teams/helpers.ts","state/pools/helpers.ts","config/constants/campaigns.ts","utils/bscscan.ts","config/constants/meta.ts","components/layout/Page.tsx","components/layout/Container.tsx","utils/collectibles.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useStake.ts","config/constants/ifo.ts","state/block/index.ts","state/collectibles/index.ts","components/ApyCalculatorModal/index.tsx","state/achievements/helpers.ts","state/achievements/index.ts","utils/web3React.ts","utils/farmsPriceHelpers.ts","utils/formatBalance.ts","contexts/RefreshContext.tsx","contexts/ThemeContext.tsx","contexts/ToastsContext/Provider.tsx","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/usePersistState.ts","utils/bigNumber.ts","utils/achievements.ts","utils/latinise.ts","state/predictions/index.ts","hooks/useLastUpdated.ts","components/PageLoader.tsx","utils/getTimePeriods.ts","state/hooks.ts","utils/apr.ts","components/Select/Select.tsx","hooks/useUnstake.ts","hooks/useHarvest.ts","routerHistory.ts","config/index.ts","utils/contractHelpers.ts","utils/farmHelpers.ts","components/layout/Flex.tsx","hooks/useContract.ts","hooks/usePreviousValue.ts","hooks/useDelayedUnmount.ts","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx","views/Pools/helpers.tsx","state/index.ts","hooks/useWeb3.ts","state/actions.ts","utils/callHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","utils/multicall.ts","utils/web3.ts","config/constants/pools.ts","hooks/useToast.ts","state/types.ts","state/predictions/helpers.ts","state/predictions/queries.ts","config/localization/languages.ts","hooks/useTheme.ts","utils/compoundApyHelpers.ts","views/Pools/components/ToggleView/ToggleView.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","components/Balance.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","hooks/cakeVault/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","hooks/useApprove.ts","state/teams/index.tsx","config/constants/nfts.ts","config/constants/farms.ts"],"names":["tokens","bnb","symbol","projectLink","cake","address","56","97","decimals","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","wbnb","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","popen","ez","vrt","tusd","mtrg","ktn","qkc","makeBatchRequest","calls","batch","getWeb3NoAccount","BatchRequest","promises","map","call","Promise","resolve","reject","add","request","err","result","execute","all","UnlockButton","props","t","useTranslation","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","priceHelperLps","pid","lpSymbol","lpAddresses","token","quoteToken","fetchFarm","farm","a","lpAddress","getAddress","name","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","times","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","data","getFarmFromTokenSymbol","farms","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","filter","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","find","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","account","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsConfig","userData","allowance","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","createAsyncThunk","pids","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","createSlice","reducers","setLoadArchivedFarmsData","state","action","payload","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","actions","PoolIds","PoolCategory","NftType","GRAPH_API_PROFILE","process","GRAPH_API_PREDICTION","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","dispatch","useAppDispatch","useWeb3React","activate","deactivate","toastError","useToast","useCallback","connectorID","connector","connectorsByName","error","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","profileClear","CoreTag","variant","outline","startIcon","width","color","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","nodes","getNodeUrl","randomIndex","random","length","provider","ethereum","chainId","parseInt","method","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","BASE_BSC_SCAN_URL","console","registerToken","tokenAddress","tokenImage","type","options","image","tokenAdded","teams","id","description","images","lg","md","sm","alt","ipfs","background","textColor","users","points","profileContract","getProfileContract","getTeam","teamId","methods","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","i","push","teamData","onChainTeamData","Number","transformUserData","stakingTokenBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","rest","getTokenPricesFromFarm","prices","quoteTokenAddress","toLocaleLowerCase","toNumber","campaigns","title","badge","campaignMap","Map","campaign","set","getBscScanAddressUrl","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","getBscScanBlockCountdownUrl","DEFAULT_META","StyledPage","styled","Container","theme","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","cakePriceUsdDisplay","gt","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","pageMeta","path","getCustomMeta","pageTitle","join","property","content","Page","children","getIdentifierKeyFromAddress","nftAddress","nftSource","Object","values","nftSources","nftSourceEntry","identifierKey","getTokenUrl","tokenUri","startsWith","IPFS_GATEWAY","slice","getAddressByType","getTokenUriData","tokenId","contract","getErc721Contract","tokenURI","fetch","uriDataResponse","ok","json","uriData","getNftByTokenId","Nfts","nft","identifier","LS_KEY","fetchLocale","locale","response","getLanguageCodeFromLS","getItem","EN","isFetching","currentLanguage","languageMap","translations","LanguageContext","createContext","LanguageProvider","useState","codeFromStorage","languages","setState","useEffect","enLocale","get","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","key","translatedText","match","interpolatedText","keys","dataKey","templateKey","RegExp","replace","Provider","value","languageContext","Error","useSousStake","sousId","isUsingBnb","masterChefContract","useMasterchef","sousChefContract","useSousChef","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","txHash","cakeBnbLpToken","ifos","isActive","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","blockSlice","currentBlock","initialBlock","setBlock","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","isInitialized","isLoading","pending","association","Grid","GridItem","ApyCalculatorModal","onDismiss","tokenPrice","apr","linkLabel","linkHref","earningTokenSymbol","roundingDecimals","compoundFrequency","performanceFee","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","fontSize","bold","textTransform","mb","num","getRoi","amountEarned","amountInvested","toFixed","maxWidth","freq","mt","fee","justifyContent","href","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","rpcUrl","injected","InjectedConnector","supportedChainIds","walletconnect","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","preferredFarm","some","getDecimalAmount","getBalanceAmount","dividedBy","getBalanceNumber","balance","getFullDisplayBalance","decimalsToAppear","formatNumber","number","minPrecision","maxPrecision","React","RefreshContextProvider","setSlow","setFast","interval","setInterval","prev","clearInterval","CACHE_KEY","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","stringify","dark","light","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","getCakeAddress","addresses","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","usePersistState","initialValue","localStorageKey","valueFromLS","setValue","BIG_NINE","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","input","x","status","PredictionStatus","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","HistoryFilter","ALL","currentEpoch","currentRoundStartBlockNumber","intervalBlocks","bufferBlocks","minBetAmount","lastOraclePrice","rounds","history","bets","fetchBet","getBet","bet","transformBetResponse","fetchRoundBet","roundId","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","useLastUpdated","Date","now","lastUpdated","setStateLastUpdated","previousLastUpdated","usePreviousValue","setLastUpdated","Wrapper","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","Math","abs","timeLeft","years","months","days","hours","minutes","floor","usePollFarmsData","includeArchive","web3","farmToFetch","usePollCoreFarmData","usePollBlockNumber","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","f","useFarmUser","useBusdPriceFromPid","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","useFetchPublicPoolsData","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","callFee","withdrawalFee","withdrawalFeePeriod","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useMemo","useFetchProfile","fetchProfile","useProfile","profile","hasRegistered","hasProfile","useTeam","fetchTeam","useTeams","fetchTeams","useFetchAchievements","useAchievements","usePriceBnbBusd","cakeBnbFarm","useBlock","useInitialBlock","useIsHistoryPaneOpen","predictions","useIsChartPaneOpen","useGetRounds","useGetSortedRounds","roundData","orderBy","useGetCurrentEpoch","useGetIntervalBlocks","useGetTotalIntervalBlocks","useGetPredictionsStatus","useGetHistoryFilter","useGetCurrentRoundBlockNumber","useGetMinBetAmount","useGetIsFetchingHistory","useGetHistoryByAccount","useGetBetByRoundId","useBetCanClaim","getCanClaim","useGetLastOraclePrice","useGetCollectibles","collectibles","identifiers","tokenIds","nftsInWallet","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","isNaN","isFinite","getFarmApr","poolLiquidityUsd","CAKE_PER_YEAR","DropDownHeader","shadows","inset","colors","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","onChange","containerRef","useRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","height","containerSize","setContainerSize","toggling","onOptionClicked","option","current","offsetWidth","offsetHeight","ref","label","useSousUnstake","enableEmergencyWithdraw","handleUnstake","unstake","sousEmergencyUnstake","sousUnstake","updateUserPendingReward","onUnstake","useUnstake","useHarvest","farmPid","onReward","harvest","useSousHarvest","handleHarvest","soushHarvestBnb","soushHarvest","createBrowserHistory","config","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","LOTTERY_TICKET_PRICE","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","getContract","abi","web3NoAccount","Contract","getBep20Contract","bep20Abi","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","pointCenterIfo","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","FlexLayout","useIfoV1Contract","useWeb3","useIfoV2Contract","useERC20","useERC721","useCake","useBunnyFactory","useLottery","useLotteryTicket","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","useCakeVaultContract","usePredictionsContract","useChainlinkOracleContract","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Outer","Box","gradients","bubblegum","Inner","PageHeader","StyledInput","Input","InputWrapper","SearchInput","onChangeCallback","placeholder","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","e","target","onBlur","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","isHighValueToken","getCakeVaultEarnings","hasAutoEarnings","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","store","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","collectiblesReducer","useDispatch","library","refEth","Web3","setweb3","approve","lpContract","ethers","constants","MaxUint256","send","from","enterStaking","gas","on","tx","deposit","leaveStaking","withdraw","emergencyWithdraw","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","res","pendingRewards","pendingCake","cakeVaultContract","fetchPublicVaultData","getPricePerFullShare","calculateHarvestCakeRewards","calculateTotalPendingCakeRewards","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","withdrawFee","withdrawFeePeriod","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","earningToken","parseFloat","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updateUserAllowance","updatePoolsUserData","field","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","decodeFunctionResult","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","CORE","sortOrder","COMMUNITY","toastContext","BetPosition","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","position","hash","BULL","BEAR","totalBNB","roundResponse","positionResponse","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","marketResponse","where","first","skip","betId","code","languageList","useTheme","StyledThemeContext","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","ViewMode","_binanceChainListener","defineProperty","this","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","GlobalStyle","createGlobalStyle","icon","items","Menu","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","ToastListener","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","Balance","isDisabled","unit","prefix","previousValue","showPrefix","showUnit","start","end","duration","separator","AprRow","tooltipContent","useTooltip","placement","targetRef","tooltipVisible","earningsPercentageToDisplay","apyModalLink","useModal","onPresentApyModal","alignItems","scale","PromotedGradient","keyframes","StyledCard","Card","isPromoted","primaryBright","secondary","card","isDesktop","StyledCardInner","isPromotedPool","radii","ExpandedWrapper","Flex","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","imageSrc","isMetaMaskInScope","isMetaMask","isManualCakePool","flexDirection","small","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ml","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","isCakePool","src","ApprovalAction","stakingTokenContract","useSousApprove","handleApprove","requestedApproval","endIcon","spin","disabled","StyledLink","Link","NotEnoughTokensModal","headerBackground","cardHeader","as","external","StyledButton","Button","PercentageButton","mx","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","style","textAlign","minWidth","onUserInput","convertedInput","percentage","min","currencyValue","isWarning","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","activeIndex","onItemClick","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","display","InlineText","Text","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","text","CardFooter","VaultApprovalAction","useVaultApprove","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","lte","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","useCheckVaultApprovalStatus","isVaultApproved","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isXl","useMatchBreakpoints","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","url","isExact","isXs","isSm","viewModeToggle","liveOrFinishedSwitch","to","stakedOnlySwitch","checked","Divider","BountyModal","cakeBountyToDisplay","dollarBountyToDisplay","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","tooltipPadding","right","BountyCard","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","fontWeight","onPresentBountyModal","ButtonText","xs","HelpButton","px","BaseCell","CellContent","StyledCell","NameCell","hasVaultShares","iconFile","showStakedTag","subtitle","showSubtitle","role","HelpIconWrapper","EarningsCell","labelText","asset","event","stopPropagation","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","flex","showLoading","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","displayBalance","actionTitle","pt","alignSelf","lineHeight","marginTop","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","cardBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","SearchSortContainer","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","searchQuery","setSearchQuery","sortOption","setSortOption","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","showFinishedPools","poolsToShow","chosenPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","Home","lazy","Farms","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","App","Global","exact","component","iterations","Providers","ReactDOM","render","StrictMode","document","getElementById","transformProfileResponse","profileResponse","userId","getUsername","username","getProfile","getUserProfile","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","addPoints","useApprove","onApprove","setRequestedApproval","cakeContract","setIsVaultApproved","currentAllowance","checkApprovalStatus","useLotteryApprove","lotteryContract","useIfoApprove","tokenContract","spenderAddress","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","PANCAKE","MIXIE","variationId","video","webm","mp4","blur","isCommunity"],"mappings":"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","file":"static/js/main.2ed82b96.chunk.js","sourcesContent":["const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1ffd0b47127fdd4097e54521c9e2c7f0d66aafc5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xac51066d7bec65dc4589368da368b212745d63e8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211ffbe424b90e25a15531ca322adf1559779e45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670b735ed92734f5628692f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xeca41281c24451168a37211f0bc2b8645af45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26a5dfab467d4f58fb266648cae769503cec9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87f74415190425ccd873048c708f8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xf35262a9d427f96d2437379ef090db986eae5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474a89358b2c2265883df993b12f0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64c582698b8572aaf765bdc426ac3aefb6b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91a0713155003fc4dce0afa871b508b3b715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986d5c77c65e5801a5caa4fae80089f870a71da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1f7216fdb338247512ec99715587bb97bbf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173f350d916358af3e218bdf2178494beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacb0ab6fb34d24e8a67bfa14bf4d95d4c7af92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5b6dcf557e2abe2323c48445e8cc948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xed28a457a5a76596ac48d87c0f577020f6ea1c4c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39f0edda668c58371e519af37ca705f2bfcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86abcb37c3a4b64f74f59301aff131a1becc787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684adaf3fcfe9cfb5cede3abf02f0cdd1012e3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3fda9383a84c05ec8f7630fe10adf1fac13241cc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42f6f551ae042cbe50c739158b4f0cac0edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7c17c8bed8d14bacce824d020f994f4880d6ab3b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xcd40f2670cf58720b694968698a5514e924f742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xe1d1f66215998786110ba0102ef558b22224c016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8c3e16576d9bd68766f3836d9a33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebc94a44727b3f3531c0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04c747b40be4d535fc83d09939fb0f626f32800b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6f769e65c14ebd1f68817f5f1dcdb61cfa2d6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xa7f552078dcc247c2684336020c03648500c6d9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xc13b7a43223bb9bf4b69bd68ab20ca1b79d81c75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227e22102fe3322098e4cbfe18cfebd57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0f9e4d49f25de22c2202af916b681fbb3790497b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5e6689c9c8b02be7c49912ef19e79cf24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xc0eff7749b125444953ef89682201fb8c6a917cd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4cfbbdfbd5bf0814472ff35c72717bd095ada055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159e9b0ac6c80e824f7eea748a32a0ae2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1d1eb8e8293222e1a29d2c0e4ce6c0acfd89aaac',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5a3f4a8008c4ccdd1b942b121c8b1944f1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cd1075682b0fccaadd0ca629e138e64015ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8f0528ce5ef7b51152a59745befdd91d97091d2f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fcb2f3dbee7df45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857e191354dbea0b714d78bc59e57c411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595f9da7b868b1822194faed312235e43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaef0d72a118ce24fee3cd1d43d383897d05b4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8d46ec87a3af86a1db6c189afa6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xf218184af829cf2b0019f8e6f0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aae4580057187923aec331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04baf95fd4c52fd09a56d840baee0ab8d7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09fbc8dcd557b5c88cea6946a8b404a',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xbbeb90cfb6fafa1f69aa130b7341089abeef5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396bfc8a2f84748701167c2d622f041a1d7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3a21356793b49154fd3bbe91cbc2a16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810ee35443639348adbbc467b33310d2ab43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32eb035b786898c00bb1c64d8c6f8e7a46d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xabae871b7e3b67aeec6b46ae9fe1a91660aadac5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6cd57764fa743756f7a6ce3358cc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5f84ce30dc3cf7909101c69086c50de191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016e85a25aeb13065688cafb43044c2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xbd2949f67dcdc549c6ebe98696449fa79d988a9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xdae6c2a48bfaa66b43815c5548b10800919c993e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xa1434f1fc3f437fa33f7a781e041961c0205b5da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n}\n\nexport default tokens\n","import { getWeb3NoAccount } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3NoAccount()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          window.localStorage.removeItem(connectorLocalStorageKey)\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n            toastError(t('Provider Error'), t('No provider was found'))\n          } else if (\n            error instanceof UserRejectedRequestErrorInjected ||\n            error instanceof UserRejectedRequestErrorWalletConnect\n          ) {\n            if (connector instanceof WalletConnectConnector) {\n              const walletConnector = connector as WalletConnectConnector\n              walletConnector.walletConnectProvider = null\n            }\n            toastError(t('Authorization Error'), t('Please authorize to access your account'))\n          } else {\n            toastError(error.name, error.message)\n          }\n        }\n      })\n    } else {\n      toastError(t('Unable to find connector'), t('The connector config is wrong'))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon, TagProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst BinanceTag: React.FC<TagProps> = (props) => {\n  return (\n    <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      Binance\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","export { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { BASE_BSC_SCAN_URL } from 'config'\n\nexport const getBscScanAddressUrl = (address: string) => {\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\n}\n\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\n}\n\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\n}\n\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'PancakeSwap',\n  description:\n    'The most popular AMM on BSC by user count! Earn CAKE through yield farming or win it in the Lottery, then stake it in Syrup Pools to earn more tokens! Initial Farm Offerings (new token launch model pioneered by PancakeSwap), NFTs, and more, on a platform you can trust.',\n  image: 'https://pancakeswap.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('PancakeSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('PancakeSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('PancakeSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('PancakeSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('PancakeSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('PancakeSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('PancakeSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('PancakeSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('PancakeSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('PancakeSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('PancakeSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [Number(tokenId), walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\n      const balanceOf = Number(balanceOfResponse)\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>{t('365d(APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Box mb=\"28px\" maxWidth=\"280px\">\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {t(\n            'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n            { freq: compoundFrequency.toLocaleString() },\n          )}\n        </Text>\n        {performanceFee > 0 && (\n          <Text mt=\"14px\" fontSize=\"12px\" color=\"textSubtle\">\n            {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\n          </Text>\n        )}\n      </Box>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  lotteryV2: {\n    97: '0x4D8B718b4e617ea49bCe6B508c23353Cc7bADd28',\n    56: '',\n  },\n  multiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n}\n","import addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\n","import { useEffect, useState } from 'react'\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, localStorageKey: string) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? JSON.parse(valueFromLS) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(value))\n  }, [value, localStorageKey])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\nimport {\n  makeFutureRoundResponse,\n  transformRoundResponse,\n  getBetHistory,\n  transformBetResponse,\n  getBet,\n  makeRoundData,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 2,\n  minBetAmount: '1000000000000000',\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  bets: {},\n}\n\n// Thunks\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\n  'predictions/fetchBet',\n  async ({ account, id }) => {\n    const response = await getBet(id)\n    const bet = transformBetResponse(response)\n    return { account, bet }\n  },\n)\n\nexport const fetchRoundBet = createAsyncThunk<\n  { account: string; roundId: string; bet: Bet },\n  { account: string; roundId: string }\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round: roundId,\n  })\n\n  // This should always return 0 or 1 bet because a user can only place\n  // one bet per round\n  if (betResponses && betResponses.length === 1) {\n    const [betResponse] = betResponses\n    return { account, roundId, bet: transformBetResponse(betResponse) }\n  }\n\n  return { account, roundId, bet: null }\n})\n\n/**\n * Used to poll the user bets of the current round cards\n */\nexport const fetchCurrentBets = createAsyncThunk<\n  { account: string; bets: Bet[] },\n  { account: string; roundIds: string[] }\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round_in: roundIds,\n  })\n\n  return { account, bets: betResponses.map(transformBetResponse) }\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    },\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\n      const { rounds, market } = action.payload\n      const newRoundData = makeRoundData(rounds)\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\n\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\n        // Add new round\n        const newestRound = maxBy(rounds, 'epoch') as Round\n        const futureRound = transformRoundResponse(\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\n        )\n\n        newRoundData[futureRound.id] = futureRound\n      }\n\n      state.currentEpoch = incomingCurrentRound.epoch\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\n      state.rounds = { ...state.rounds, ...newRoundData }\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\n      const { account, roundId } = action.payload\n      const accountBets = state.bets[account]\n\n      if (accountBets && accountBets[roundId]) {\n        accountBets[roundId].claimed = true\n      }\n    },\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\n      const { account, roundId, bet } = action.payload\n\n      state.bets = {\n        ...state.bets,\n        [account]: {\n          ...state.bets[account],\n          [roundId]: bet,\n        },\n      }\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Get unclaimed bets\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n\n    // Get round bet\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\n      const { account, roundId, bet } = action.payload\n\n      if (bet) {\n        state.bets = {\n          ...state.bets,\n          [account]: {\n            ...state.bets[account],\n            [roundId]: bet,\n          },\n        }\n      }\n    })\n\n    // Update Bet\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\n      const { account, bet } = action.payload\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n\n      // Save any fetched bets in the \"bets\" namespace\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n  },\n})\n\n// Actions\nexport const {\n  initialize,\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  updateMarketData,\n  markBetAsCollected,\n  setPredictionStatus,\n  markPositionAsEntered,\n  setLastOraclePrice,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport { Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { farmsConfig } from 'config/constants'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, FarmsState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchWalletNfts } from './collectibles'\nimport { getCanClaim } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, web3, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh, web3])\n}\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch, web3])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\n  return filteredFarm\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\n  return tokenPrice\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// Pools\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh, web3])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(252)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetRounds = () => {\n  return useSelector((state: State) => state.predictions.rounds)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetRound = (id: string) => {\n  const rounds = useGetRounds()\n  return rounds[id]\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\n  const bets = useSelector((state: State) => state.predictions.bets)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][roundId]) {\n    return null\n  }\n\n  return bets[account][roundId]\n}\n\nexport const useBetCanClaim = (account: string, roundId: string) => {\n  const bet = useGetBetByRoundId(account, roundId)\n\n  if (!bet) {\n    return false\n  }\n\n  return getCanClaim(bet)\n}\n\nexport const useGetLastOraclePrice = (): BigNumber => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return new BigNumber(lastOraclePrice)\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOption, setSelectedOption] = useState(options[0])\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    setSelectedOption(option)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{selectedOption.label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedOption.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    return txHash\n  }, [account, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 10 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://exchange.pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\n\nconst getContract = (abi: any, address: string, web3?: Web3) => {\n  const _web3 = web3 ?? web3NoAccount\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address)\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getLotteryV2Contract = (web3?: Web3) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\nexport const getCakeVaultContract = (web3?: Web3) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\n}\nexport const getPredictionsContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\n}\nexport const getChainlinkOracleContract = (web3?: Web3) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\n}\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useLotteryV2Contract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryV2Contract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const useSousChefV2 = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box) <{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({\n      from: account,\n      gas: DEFAULT_GAS_LIMIT,\n      value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(),\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\n    return new BigNumber(stakingLimit)\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3NoAccount()\nconst masterChefContract = new web3.eth.Contract(masterChefABI as unknown as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const [sharePrice, shares, estimatedCakeBountyReward, totalPendingCakeHarvest] = await makeBatchRequest([\n      cakeVaultContract.methods.getPricePerFullShare().call,\n      cakeVaultContract.methods.totalShares().call,\n      cakeVaultContract.methods.calculateHarvestCakeRewards().call,\n      cakeVaultContract.methods.calculateTotalPendingCakeRewards().call,\n    ])\n    const totalSharesAsBigNumber = new BigNumber(shares as string)\n    const sharePriceAsBigNumber = new BigNumber(sharePrice as string)\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward as string).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest as string).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const [performanceFee, callFee, withdrawalFee, withdrawalFeePeriod] = await makeBatchRequest([\n      cakeVaultContract.methods.performanceFee().call,\n      cakeVaultContract.methods.callFee().call,\n      cakeVaultContract.methods.withdrawFee().call,\n      cakeVaultContract.methods.withdrawFeePeriod().call,\n    ])\n    return {\n      performanceFee: parseInt(performanceFee as string, 10),\n      callFee: parseInt(callFee as string, 10),\n      withdrawalFee: parseInt(withdrawalFee as string, 10),\n      withdrawalFeePeriod: parseInt(withdrawalFeePeriod as string, 10),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: number, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: number, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: number, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: number, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport default web3NoAccount\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 167,\n    stakingToken: tokens.cake,\n    earningToken: tokens.qkc,\n    contractAddress: {\n      97: '',\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.9143',\n  },\n  {\n    sousId: 166,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ktn,\n    contractAddress: {\n      97: '',\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01215',\n  },\n  {\n    sousId: 165,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mtrg,\n    contractAddress: {\n      97: '',\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.05613',\n  },\n  {\n    sousId: 164,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 163,\n    stakingToken: tokens.cake,\n    earningToken: tokens.vrt,\n    contractAddress: {\n      97: '',\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '40.5092',\n  },\n  {\n    sousId: 162,\n    stakingToken: tokens.cake,\n    earningToken: tokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 161,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ez,\n    contractAddress: {\n      97: '',\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01736',\n  },\n  {\n    sousId: 160,\n    stakingToken: tokens.cake,\n    earningToken: tokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    isFinished: true,\n    tokenPerBlock: '0.00868',\n  },\n  {\n    sousId: 159,\n    stakingToken: tokens.cake,\n    earningToken: tokens.popen,\n    contractAddress: {\n      97: '',\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.19097',\n  },\n  {\n    sousId: 158,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.023148',\n  },\n  {\n    sousId: 157,\n    stakingToken: tokens.cake,\n    earningToken: tokens.well,\n    contractAddress: {\n      97: '',\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2025',\n    sortOrder: 999,\n  },\n  {\n    sousId: 156,\n    stakingToken: tokens.cake,\n    earningToken: tokens.deri,\n    contractAddress: {\n      97: '',\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.6087',\n    sortOrder: 999,\n  },\n  {\n    sousId: 155,\n    stakingToken: tokens.cake,\n    earningToken: tokens.chr,\n    contractAddress: {\n      97: '',\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.655',\n    sortOrder: 999,\n  },\n  {\n    sousId: 154,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cyc,\n    contractAddress: {\n      97: '',\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00015914',\n    sortOrder: 999,\n  },\n  {\n    sousId: 153,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xend,\n    contractAddress: {\n      97: '',\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.31828',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 152,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.03553',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 151,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hotcross,\n    contractAddress: {\n      97: '',\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 150,\n    stakingToken: tokens.cake,\n    earningToken: tokens.rfox,\n    contractAddress: {\n      97: '',\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n    isFinished: false,\n  },\n  {\n    sousId: 149,\n    stakingToken: tokens.cake,\n    earningToken: tokens.wmass,\n    contractAddress: {\n      97: '',\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.24942',\n    isFinished: false,\n  },\n  {\n    sousId: 148,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ubxt,\n    contractAddress: {\n      97: '',\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.4074',\n    isFinished: false,\n  },\n  {\n    sousId: 147,\n    stakingToken: tokens.cake,\n    earningToken: tokens.btr,\n    contractAddress: {\n      97: '',\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 146,\n    stakingToken: tokens.cake,\n    earningToken: tokens.τdoge,\n    contractAddress: {\n      97: '',\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.868',\n    isFinished: false,\n  },\n  {\n    sousId: 145,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01261',\n    isFinished: false,\n  },\n  {\n    sousId: 144,\n    stakingToken: tokens.cake,\n    earningToken: tokens.one,\n    contractAddress: {\n      97: '',\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '57.87',\n    isFinished: false,\n  },\n  {\n    sousId: 143,\n    stakingToken: tokens.cake,\n    earningToken: tokens.fine,\n    contractAddress: {\n      97: '',\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1342',\n    isFinished: false,\n  },\n  {\n    sousId: 142,\n    stakingToken: tokens.doge,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01388',\n    isFinished: false,\n  },\n  {\n    sousId: 141,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01331',\n    isFinished: false,\n  },\n  {\n    sousId: 140,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oin,\n    contractAddress: {\n      97: '',\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 139,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hyfi,\n    contractAddress: {\n      97: '',\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 138,\n    stakingToken: tokens.cake,\n    earningToken: tokens.kun,\n    contractAddress: {\n      97: '',\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23148',\n    isFinished: false,\n  },\n  {\n    sousId: 137,\n    stakingToken: tokens.cake,\n    earningToken: tokens.math,\n    contractAddress: {\n      97: '',\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15798',\n    isFinished: false,\n  },\n  {\n    sousId: 136,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.17361',\n    isFinished: false,\n  },\n  {\n    sousId: 135,\n    stakingToken: tokens.cake,\n    earningToken: tokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '462.96',\n    isFinished: false,\n  },\n  {\n    sousId: 134,\n    stakingToken: tokens.cake,\n    earningToken: tokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '4.0509',\n    isFinished: false,\n  },\n  {\n    sousId: 133,\n    stakingToken: tokens.cake,\n    earningToken: tokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '79.86',\n    isFinished: false,\n  },\n  {\n    sousId: 132,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lmt,\n    contractAddress: {\n      97: '',\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.66145',\n    isFinished: false,\n  },\n  {\n    sousId: 131,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pnt,\n    contractAddress: {\n      97: '',\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09548',\n    isFinished: false,\n  },\n  {\n    sousId: 130,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0298',\n    isFinished: false,\n  },\n  {\n    sousId: 129,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4861',\n    isFinished: true,\n  },\n  {\n    sousId: 128,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 127,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: false,\n  },\n  {\n    sousId: 126,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: false,\n  },\n  {\n    sousId: 125,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: false,\n  },\n  {\n    sousId: 124,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: false,\n  },\n  {\n    sousId: 123,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: false,\n  },\n  {\n    sousId: 122,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 121,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: false,\n  },\n  {\n    sousId: 120,\n    stakingToken: tokens.cake,\n    earningToken: tokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: false,\n  },\n  {\n    sousId: 119,\n    stakingToken: tokens.cake,\n    earningToken: tokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: false,\n  },\n  {\n    sousId: 118,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: false,\n  },\n  {\n    sousId: 117,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.009837',\n    isFinished: true,\n  },\n  {\n    sousId: 116,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dfd,\n    contractAddress: {\n      97: '',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.46296',\n    isFinished: false,\n  },\n  {\n    sousId: 115,\n    stakingToken: tokens.cake,\n    earningToken: tokens.alpaca,\n    contractAddress: {\n      97: '',\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.22743',\n    isFinished: false,\n  },\n  {\n    sousId: 114,\n    stakingToken: tokens.cake,\n    earningToken: tokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: false,\n  },\n  {\n    sousId: 113,\n    stakingToken: tokens.cake,\n    earningToken: tokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: true,\n  },\n  {\n    sousId: 112,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.21527',\n  },\n  {\n    sousId: 111,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 110,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 109,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 108,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mix,\n    contractAddress: {\n      97: '',\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3721',\n  },\n  {\n    sousId: 107,\n    stakingToken: tokens.cake,\n    earningToken: tokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.3356',\n  },\n  {\n    sousId: 106,\n    stakingToken: tokens.cake,\n    earningToken: tokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '14.4675',\n  },\n  {\n    sousId: 105,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hzn,\n    contractAddress: {\n      97: '',\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 104,\n    stakingToken: tokens.cake,\n    earningToken: tokens.alpa,\n    contractAddress: {\n      97: '',\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23495',\n  },\n  {\n    sousId: 103,\n    stakingToken: tokens.cake,\n    earningToken: tokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 102,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tlm,\n    contractAddress: {\n      97: '',\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '17.361',\n  },\n  {\n    sousId: 101,\n    stakingToken: tokens.cake,\n    earningToken: tokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08796',\n  },\n  {\n    sousId: 100,\n    stakingToken: tokens.cake,\n    earningToken: tokens.eps,\n    contractAddress: {\n      97: '',\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.07716',\n  },\n  {\n    sousId: 99,\n    stakingToken: tokens.cake,\n    earningToken: tokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 98,\n    stakingToken: tokens.cake,\n    earningToken: tokens.itam,\n    contractAddress: {\n      97: '',\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.096',\n  },\n  {\n    sousId: 97,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 96,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tko,\n    contractAddress: {\n      97: '',\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n  },\n  {\n    sousId: 95,\n    stakingToken: tokens.cake,\n    earningToken: tokens.apys,\n    contractAddress: {\n      97: '',\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09953',\n  },\n  {\n    sousId: 94,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hoo,\n    contractAddress: {\n      97: '',\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.489',\n  },\n  {\n    sousId: 93,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 92,\n    stakingToken: tokens.cake,\n    earningToken: tokens.easy,\n    contractAddress: {\n      97: '',\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0072338',\n  },\n  {\n    sousId: 91,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nrv,\n    contractAddress: {\n      97: '',\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15046',\n  },\n  {\n    sousId: 90,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dego,\n    contractAddress: {\n      97: '',\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00405',\n  },\n  {\n    sousId: 89,\n    stakingToken: tokens.cake,\n    earningToken: tokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 88,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 87,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6811',\n  },\n  {\n    sousId: 86,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swth,\n    contractAddress: {\n      97: '',\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.3148',\n  },\n  {\n    sousId: 85,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 84,\n    stakingToken: tokens.cake,\n    earningToken: tokens.zil,\n    contractAddress: {\n      97: '',\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.0995',\n  },\n  {\n    sousId: 83,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pcws,\n    contractAddress: {\n      97: '',\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00434',\n  },\n  {\n    sousId: 82,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 81,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 80,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lto,\n    contractAddress: {\n      97: '',\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.2893',\n  },\n  {\n    sousId: 79,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 78,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 77,\n    stakingToken: tokens.cake,\n    earningToken: tokens.trade,\n    contractAddress: {\n      97: '',\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4484',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 76,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dusk,\n    contractAddress: {\n      97: '',\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4629',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 75,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bifi,\n    contractAddress: {\n      97: '',\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00007234',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 74,\n    stakingToken: tokens.cake,\n    earningToken: tokens.txl,\n    contractAddress: {\n      97: '',\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.434027',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 73,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cos,\n    contractAddress: {\n      97: '',\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5.787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 72,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bunny,\n    contractAddress: {\n      97: '',\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00289',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 71,\n    stakingToken: tokens.cake,\n    earningToken: tokens.alice,\n    contractAddress: {\n      97: '',\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.14467',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 70,\n    stakingToken: tokens.cake,\n    earningToken: tokens.for,\n    contractAddress: {\n      97: '',\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2.8935',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 69,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bux,\n    contractAddress: {\n      97: '',\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 68,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nuls,\n    contractAddress: {\n      97: '',\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0868',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 67,\n    stakingToken: tokens.cake,\n    earningToken: tokens.belt,\n    contractAddress: {\n      97: '',\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00868',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 66,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4861',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 65,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bfi,\n    contractAddress: {\n      97: '',\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0001157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 64,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.009837',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 63,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0549',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 62,\n    stakingToken: tokens.tpt,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0462',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 61,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tpt,\n    contractAddress: {\n      97: '',\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.616',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 60,\n    stakingToken: tokens.cake,\n    earningToken: tokens.watch,\n    contractAddress: {\n      97: '',\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.3472',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 59,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0413',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 58,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 57,\n    stakingToken: tokens.cake,\n    earningToken: tokens.iotx,\n    contractAddress: {\n      97: '',\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '6.365',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 56,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bor,\n    contractAddress: {\n      97: '',\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.000395',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 55,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bopen,\n    contractAddress: {\n      97: '',\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0723',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 54,\n    stakingToken: tokens.sushi,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0367',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 53,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dodo,\n    contractAddress: {\n      97: '',\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0578',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 52,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.13',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 51,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bry,\n    contractAddress: {\n      97: '',\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 50,\n    stakingToken: tokens.cake,\n    earningToken: tokens.zee,\n    contractAddress: {\n      97: '',\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1736',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 49,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swgb,\n    contractAddress: {\n      97: '',\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.899',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 48,\n    stakingToken: tokens.comp,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.055',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 47,\n    stakingToken: tokens.comp,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.55',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 46,\n    stakingToken: tokens.cake,\n    earningToken: tokens.sfp,\n    contractAddress: {\n      97: '',\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.6',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 45,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 44,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 43,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lit,\n    contractAddress: {\n      97: '',\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.231',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 42,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0138',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 41,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bdo,\n    contractAddress: {\n      97: '',\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.075',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 40,\n    stakingToken: tokens.cake,\n    earningToken: tokens.egld,\n    contractAddress: {\n      97: '',\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.001215',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 39,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 38,\n    stakingToken: tokens.cake,\n    earningToken: tokens.wsote,\n    contractAddress: {\n      97: '',\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.23',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 37,\n    stakingToken: tokens.cake,\n    earningToken: tokens.front,\n    contractAddress: {\n      97: '',\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2546',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 36,\n    stakingToken: tokens.cake,\n    earningToken: tokens.helmet,\n    contractAddress: {\n      97: '',\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.81',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 35,\n    stakingToken: tokens.cake,\n    earningToken: tokens.btcst,\n    contractAddress: {\n      97: '',\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.011574',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 34,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bscx,\n    contractAddress: {\n      97: '',\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.17361',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 33,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ten,\n    contractAddress: {\n      97: '',\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05787',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 32,\n    stakingToken: tokens.cake,\n    earningToken: tokens.balbt,\n    contractAddress: {\n      97: '',\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4166',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 31,\n    stakingToken: tokens.cake,\n    earningToken: tokens.asr,\n    contractAddress: {\n      97: '',\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 30,\n    stakingToken: tokens.cake,\n    earningToken: tokens.atm,\n    contractAddress: {\n      97: '',\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 29,\n    stakingToken: tokens.cake,\n    earningToken: tokens.og,\n    contractAddress: {\n      97: '',\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 28,\n    stakingToken: tokens.cake,\n    earningToken: tokens.reef,\n    contractAddress: {\n      97: '',\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '115.74',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 27,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ditto,\n    contractAddress: {\n      97: '',\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 26,\n    stakingToken: tokens.twt,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 24,\n    stakingToken: tokens.cake,\n    earningToken: tokens.juv,\n    contractAddress: {\n      97: '',\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 25,\n    stakingToken: tokens.cake,\n    earningToken: tokens.psg,\n    contractAddress: {\n      97: '',\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 21,\n    stakingToken: tokens.cake,\n    earningToken: tokens.vai,\n    contractAddress: {\n      97: '',\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.104',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 20,\n    stakingToken: tokens.bnb,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n    },\n    poolCategory: PoolCategory.BINANCE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 19,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bnb,\n    contractAddress: {\n      97: '',\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0041',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 18,\n    stakingToken: tokens.cake,\n    earningToken: tokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 17,\n    stakingToken: tokens.cake,\n    earningToken: tokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 16,\n    stakingToken: tokens.cake,\n    earningToken: tokens.unfi,\n    contractAddress: {\n      97: '',\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02893',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 15,\n    stakingToken: tokens.cake,\n    earningToken: tokens.twt,\n    contractAddress: {\n      97: '',\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 14,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hard,\n    contractAddress: {\n      97: '',\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.346',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 13,\n    stakingToken: tokens.cake,\n    earningToken: tokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '12.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 12,\n    stakingToken: tokens.cake,\n    earningToken: tokens.stax,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 11,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nar,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 10,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nya,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: true,\n  },\n  {\n    sousId: 9,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ctk,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 8,\n    stakingToken: tokens.cake,\n    earningToken: tokens.twt,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 7,\n    stakingToken: tokens.cake,\n    earningToken: tokens.inj,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 999,\n    isFinished: true,\n  },\n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import BigNumber from 'bignumber.js'\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  id: string\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface RoundData {\n  [key: string]: Round\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport interface BetData {\n  [key: string]: {\n    [key: string]: Bet\n  }\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  lastOraclePrice: string\n  rounds: RoundData\n  history: HistoryData\n  bets: BetData\n}\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  MarketResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\n  return {\n    id: epoch.toString(),\n    epoch: epoch.toString(),\n    startBlock: startBlock.toString(),\n    failed: null,\n    startAt: null,\n    lockAt: null,\n    lockBlock: null,\n    lockPrice: null,\n    endBlock: null,\n    closePrice: null,\n    totalBets: '0',\n    totalAmount: '0',\n    bearBets: '0',\n    bullBets: '0',\n    bearAmount: '0',\n    bullAmount: '0',\n    position: null,\n    bets: [],\n  }\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\n  return {\n    id: marketResponse.id,\n    paused: marketResponse.paused,\n    epoch: Number(marketResponse.epoch.epoch),\n  }\n}\n\nexport const makeRoundData = (rounds: Round[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.id]: round,\n    }\n  }, {})\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\n/**\n * Gets static data from the contract\n */\nexport const getStaticPredictionsData = async () => {\n  const { methods } = getPredictionsContract()\n  const [currentEpoch, intervalBlocks, minBetAmount, isPaused, bufferBlocks] = await makeBatchRequest([\n    methods.currentEpoch().call,\n    methods.intervalBlocks().call,\n    methods.minBetAmount().call,\n    methods.paused().call,\n    methods.bufferBlocks().call,\n  ])\n\n  return {\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: Number(currentEpoch),\n    intervalBlocks: Number(intervalBlocks),\n    bufferBlocks: Number(bufferBlocks),\n    minBetAmount,\n  }\n}\n\nexport const getMarketData = async (): Promise<{\n  rounds: Round[]\n  market: Market\n}> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getMarketData {\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\n          ${getRoundBaseFields()}\n        }\n        market(id: 1) {\n          id\n          paused\n          epoch {\n            epoch\n          }\n        }\n      }\n    `,\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\n\n  return {\n    rounds: response.rounds.map(transformRoundResponse),\n    market: transformMarketResponse(response.market),\n  }\n}\n\nexport const getRound = async (id: string) => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getRound($id: ID!) {\n        round(id: $id) {\n          ${getRoundBaseFields()}\n          bets {\n           ${getBetBaseFields()}\n            user {\n             ${getUserBaseFields()}\n            }\n          }\n        }\n      }\n  `,\n    { id },\n  )\n  return response.round\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface MarketResponse {\n  id: string\n  paused: boolean\n  epoch: {\n    epoch: string\n  }\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme { }\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  // {\n  //   label: t('Trade'),\n  //   icon: 'TradeIcon',\n  //   items: [\n  //     {\n  //       label: t('Exchange'),\n  //       href: 'https://exchange.pancakeswap.finance/#/swap',\n  //     },\n  //     {\n  //       label: t('Liquidity'),\n  //       href: 'https://exchange.pancakeswap.finance/#/pool',\n  //     },\n  //     {\n  //       label: t('LP Migration'),\n  //       href: 'https://v1exchange.pancakeswap.finance/#/migrate',\n  //     },\n  //     {\n  //       label: t('V1 Liquidity (Old)'),\n  //       href: 'https://v1exchange.pancakeswap.finance/#/pool',\n  //     },\n  //   ],\n  // },\n  {\n    label: t('Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Staking'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  // {\n  //   label: t('Prediction (BETA)'),\n  //   icon: 'PredictionsIcon',\n  //   href: '/prediction',\n  // },\n  // {\n  //   label: t('Lottery'),\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: t('Collectibles'),\n  //   icon: 'NftIcon',\n  //   href: '/collectibles',\n  // },\n  // {\n  //   label: t('Team Battle'),\n  //   icon: 'TeamBattleIcon',\n  //   href: '/competition',\n  // },\n  // {\n  //   label: t('Teams & Profile'),\n  //   icon: 'GroupsIcon',\n  //   items: [\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       label: t('Task Center'),\n  //       href: '/profile/tasks',\n  //     },\n  //     {\n  //       label: t('Your Profile'),\n  //       href: '/profile',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Info'),\n  //   icon: 'InfoIcon',\n  //   items: [\n  //     {\n  //       label: t('Overview'),\n  //       href: 'https://pancakeswap.info',\n  //     },\n  //     {\n  //       label: t('Tokens'),\n  //       href: 'https://pancakeswap.info/tokens',\n  //     },\n  //     {\n  //       label: t('Pairs'),\n  //       href: 'https://pancakeswap.info/pairs',\n  //     },\n  //     {\n  //       label: t('Accounts'),\n  //       href: 'https://pancakeswap.info/accounts',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('IFO'),\n  //   icon: 'IfoIcon',\n  //   href: '/ifo',\n  // },\n  {\n    label: t('More'),\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: t('Contact'),\n        href: 'https://docs.pancakeswap.finance/contact-us',\n      },\n      {\n        label: t('Voting'),\n        href: 'https://voting.pancakeswap.finance',\n      },\n      {\n        label: t('Github'),\n        href: 'https://github.com/pancakeswap',\n      },\n      {\n        label: t('Docs'),\n        href: 'https://docs.pancakeswap.finance',\n      },\n      {\n        label: t('Blog'),\n        href: 'https://pancakeswap.medium.com',\n      },\n      {\n        label: t('Merch'),\n        href: 'https://pancakeswap.creator-spring.com/',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  // const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      // profile={{\n      //   username: profile?.username,\n      //   image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n      //   profileLink: '/profile',\n      //   noProfileLink: '/profile',\n      //   showPip: !profile?.username,\n      // }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  const showPrefix = Boolean(value && prefix)\n  const showUnit = Boolean(value && unit)\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {showPrefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {showUnit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { getAprData } from 'views/Pools/helpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\nexport const StyledCard = styled(Card) <{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled(Box) <{ isPromotedPool?: boolean }>`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ isPromotedPool, theme }) => (isPromotedPool ? '31px' : theme.radii.card)};\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const { stakingToken, earningToken, totalStaked, contractAddress, sousId, isAutoVault } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked ? (\n            <>\n              <Balance fontSize=\"14px\" value={getTotalStakedBalance()} />\n              <Text ml=\"4px\" fontSize=\"14px\">\n                {stakingToken.symbol}\n              </Text>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n        </Flex>\n      </Flex>\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('End') : t('Start')}:</Text>\n          <Flex alignItems=\"center\">\n            {blocksRemaining || blocksUntilStart ? (\n              <Balance color=\"primary\" fontSize=\"14px\" value={blocksToDisplay} decimals={0} />\n            ) : (\n              <Skeleton width=\"54px\" height=\"21px\" />\n            )}\n            <Text ml=\"4px\" color=\"primary\" small textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Flex>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal bold={false} small href={earningToken.projectLink}>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            bold={false}\n            small\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled(CardHeader) <{ isFinished?: boolean; background?: string; isPromotedPool?: boolean }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme, isPromotedPool }) =>\n    isPromotedPool ? '31px 31px 0 0' : `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  isPromotedPool?: boolean\n}> = ({\n  earningTokenSymbol,\n  stakingTokenSymbol,\n  isFinished = false,\n  isAutoVault = false,\n  isStaking = false,\n  isPromotedPool = false,\n}) => {\n    const { t } = useTranslation()\n    const poolImageSrc = isAutoVault\n      ? `cake-cakevault.svg`\n      : `${earningTokenSymbol}-${stakingTokenSymbol}.svg`.toLocaleLowerCase()\n    const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n    const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n    const getHeadingPrefix = () => {\n      if (isAutoVault) {\n        // vault\n        return t('Auto')\n      }\n      if (isCakePool) {\n        // manual cake\n        return t('Manual')\n      }\n      // all other pools\n      return t('Earn')\n    }\n\n    const getSubHeading = () => {\n      if (isAutoVault) {\n        return t('Automatic restaking')\n      }\n      if (isCakePool) {\n        return t('Earn CAKE, stake CAKE')\n      }\n      return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n    }\n\n    return (\n      <Wrapper isPromotedPool={isPromotedPool} isFinished={isFinished} background={background}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Flex flexDirection=\"column\">\n            <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n              {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n            </Heading>\n            <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n          </Flex>\n          <Image src={`/images/pools/${poolImageSrc}`} alt={earningTokenSymbol} width={64} height={64} />\n        </Flex>\n      </Wrapper>\n    )\n  }\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useSousApprove } from 'hooks/useApprove'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useSousApprove(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport PercentageButton from './PercentageButton'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>MAX</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={BASE_EXCHANGE_URL}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport { useSousStake } from 'hooks/useStake'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: string\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          <Text fontSize=\"12px\" color=\"textSubtle\">{`~${earningsDollarValue || 0} USD`}</Text>\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex flexDirection=\"column\" mb=\"16px\">\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          {isLoading ? (\n            <Skeleton width=\"80px\" height=\"48px\" />\n          ) : (\n            <>\n              {hasEarnings ? (\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n              ) : (\n                <Heading color=\"textDisabled\">0</Heading>\n              )}\n              {earningTokenPrice !== 0 && (\n                <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n                  ~\n                  {hasEarnings ? (\n                    <Balance\n                      display=\"inline\"\n                      fontSize=\"12px\"\n                      color=\"textSubtle\"\n                      decimals={2}\n                      value={earningTokenDollarBalance}\n                      unit=\" USD\"\n                    />\n                  ) : (\n                    '0 USD'\n                  )}\n                </Text>\n              )}\n            </>\n          )}\n        </Flex>\n        <Flex>\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningTokenSymbol={earningToken.symbol}\n          stakingTokenSymbol={stakingToken.symbol}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <CardBody>\n          <AprRow pool={pool} />\n          <Flex mt=\"24px\" flexDirection=\"column\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </CardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from 'hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      cakeVaultContract.methods\n        .withdrawAll()\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    } else {\n      cakeVaultContract.methods\n        .withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString())\n        // .toString() being called to fix a BigNumber error in prod\n        // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    cakeVaultContract.methods\n      .deposit(convertedStakeAmount.toString())\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      .send({ from: account })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      })\n      .on('error', (error) => {\n        console.error(error)\n        // Remove message from toast before prod\n        toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n        setPendingTx(false)\n      })\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    setPendingTx(true)\n    // unstaking\n    if (isRemovingStake) {\n      handleWithdrawal(convertedStakeAmount)\n      // staking\n    } else {\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          MAX\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus } from 'hooks/useApprove'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody) <{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\n      <StyledCardInner isPromotedPool>\n        <StyledCardHeader\n          isPromotedPool\n          isStaking={accountHasSharesStaked}\n          isAutoVault\n          earningTokenSymbol=\"CAKE\"\n          stakingTokenSymbol=\"CAKE\"\n        />\n        <StyledCardBody isLoading={isLoading}>\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n          <Box mt=\"24px\">\n            <RecentCakeProfitRow />\n          </Box>\n          <Box mt=\"8px\">\n            <UnstakingFeeCountdownRow />\n          </Box>\n          <Flex mt=\"32px\" flexDirection=\"column\">\n            {account ? (\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </StyledCardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  Toggle,\n  Text,\n  Flex,\n  NotificationDot,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n      <ButtonMenuItem as={Link} to={`${url}`}>\n        {t('Live')}\n      </ButtonMenuItem>\n      <NotificationDot show={hasStakeInFinishedPools}>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {t('Finished')}\n        </ButtonMenuItem>\n      </NotificationDot>\n    </ButtonMenu>\n  )\n\n  const stakedOnlySwitch = (\n    <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\n      <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\n    </Flex>\n  )\n\n  if (isXs || isSm) {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" mb=\"24px\">\n        <Flex width=\"100%\" justifyContent=\"space-between\">\n          {viewModeToggle}\n          {liveOrFinishedSwitch}\n        </Flex>\n        {stakedOnlySwitch}\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent={['space-around', 'space-around', 'flex-start']}\n      mb={['24px', '24px', '24px', '0px']}\n    >\n      {viewModeToggle}\n      {liveOrFinishedSwitch}\n      {stakedOnlySwitch}\n    </Flex>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { DEFAULT_GAS_LIMIT } from 'config'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport Balance from 'components/Balance'\n\ninterface BountyModalProps {\n  cakeBountyToDisplay: number\n  dollarBountyToDisplay: number\n  totalPendingCakeHarvest: BigNumber\n  callFee: number\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({\n  cakeBountyToDisplay,\n  dollarBountyToDisplay,\n  totalPendingCakeHarvest,\n  callFee,\n  onDismiss,\n  TooltipComponent,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    cakeVaultContract.methods\n      .harvest()\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(\n          t('Could not be collected'),\n          t('There may be an issue with your transaction, or another user claimed the bounty first.'),\n        )\n        setPendingTx(false)\n        onDismiss()\n      })\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n        >\n          {t('Confirm')}\n        </Button>\n      ) : (\n        <UnlockButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = () => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: callFee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(\n    <BountyModal\n      cakeBountyToDisplay={cakeBountyToDisplay}\n      dollarBountyToDisplay={dollarBountyToDisplay}\n      totalPendingCakeHarvest={totalPendingCakeHarvest}\n      callFee={callFee}\n      TooltipComponent={TooltipComponent}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto CAKE Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, Image, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n  const iconFile = `${earningTokenSymbol}-${stakingTokenSymbol}.svg`.toLocaleLowerCase()\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent CAKE profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color={hasEarnings ? 'textSubtle' : 'textDisabled'}\n                    decimals={2}\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                    prefix=\"~\"\n                  />\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, IconButton, Skeleton, FlexProps } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Flex>\n            <Balance\n              onClick={openRoiModal}\n              fontSize=\"16px\"\n              isDisabled={isFinished}\n              value={isFinished ? 0 : earningsPercentageToDisplay}\n              decimals={2}\n              unit=\"%\"\n            />\n          </Flex>\n          {!isFinished && showIcon && (\n            <Flex>\n              <IconButton\n                onClick={openRoiModal}\n                variant=\"text\"\n                width=\"20px\"\n                height=\"20px\"\n                mr={['-14px', '-14px', '0px']}\n              >\n                <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n              </IconButton>\n            </Flex>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr\n          pool={pool}\n          performanceFee={isAutoVault ? performanceFee : 0}\n          showIcon={!isXs && !isSm}\n          alignItems=\"flex-start\"\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStakedBalance ? (\n          <Flex height=\"100%\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link external href={getBscScanBlockCountdownUrl(endBlock)} onClick={(e) => e.stopPropagation()}>\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon) <{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const displayBalance = hasEarnings ? earningTokenBalance : 0\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={displayBalance} />\n          {hasEarnings ? (\n            <Balance\n              display=\"inline\"\n              fontSize=\"12px\"\n              color={hasEarnings ? 'textSubtle' : 'textDisabled'}\n              decimals={2}\n              value={earningTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          ) : (\n            <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n              0 USD\n            </Text>\n          )}\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus, useSousApprove, useVaultApprove } from 'hooks/useApprove'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useSousApprove(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_URL } from 'config'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex: 0 0 230px;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const { sousId, stakingToken, earningToken, totalStaked, endBlock, stakingLimit, isAutoVault } = pool\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanBlockCountdownUrl(endBlock)}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('Info site')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('Project site')}\n          </LinkExternal>\n        </Flex>\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData, useCakeVault } from 'state/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\n  flex-direction: column;\n  margin-bottom: 24px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst SearchSortContainer = styled(Flex)`\n  gap: 10px;\n  justify-content: space-between;\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, 'pancake_pool_staked')\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, 'pancake_farm_view')\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                account,\n                cakeAtLastUserAction,\n                userShares,\n                pricePerFullShare,\n                pool.earningTokenPrice,\n              ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  const poolsToShow = () => {\n    let chosenPools = []\n    if (showFinishedPools) {\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n    } else {\n      chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n    }\n\n    if (searchQuery) {\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\n      chosenPools = chosenPools.filter((pool) =>\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n      )\n    }\n\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  }\n\n  const cardLayout = (\n    <CardLayout>\n      {poolsToShow().map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls justifyContent=\"space-between\">\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <SearchSortContainer>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </Flex>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <ControlStretch>\n                <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n              </ControlStretch>\n            </Flex>\n          </SearchSortContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollCoreFarmData, useFetchProfile, usePollBlockNumber } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useMasterchef, useCake, useSousChef, useLottery, useCakeVaultContract } from './useContract'\nimport useToast from './useToast'\nimport useLastUpdated from './useLastUpdated'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      if (tx) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(\n          `${t('Error')}`,\n          `${t(`Please try again. Confirm the transaction and make sure you are paying enough gas!`)}`,\n        )\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError('Error', e?.message)\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(cakeVaultContract.options.address, ethers.constants.MaxUint256)\n      .send({ from: account })\n      .on('sending', () => {\n        setRequestedApproval(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n        setLastUpdated()\n        setRequestedApproval(false)\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      })\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, cakeVaultContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n  {\n    pid: 401,\n    lpSymbol: 'QKC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\n    },\n    token: tokens.qkc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 400,\n    lpSymbol: 'KTN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\n    },\n    token: tokens.ktn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 399,\n    lpSymbol: 'MTRG-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\n    },\n    token: tokens.mtrg,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 398,\n    lpSymbol: 'SWG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\n    },\n    token: tokens.swg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 397,\n    lpSymbol: 'TUSD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\n    },\n    token: tokens.tusd,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 396,\n    lpSymbol: 'VRT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\n    },\n    token: tokens.vrt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 395,\n    lpSymbol: 'EZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\n    },\n    token: tokens.ez,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 394,\n    lpSymbol: 'KALM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\n    },\n    token: tokens.kalm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 393,\n    lpSymbol: 'pOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\n    },\n    token: tokens.popen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 335,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 392,\n    lpSymbol: 'WELL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\n    },\n    token: tokens.well,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 391,\n    lpSymbol: 'DERI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\n    },\n    token: tokens.deri,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 390,\n    lpSymbol: 'CHR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\n    },\n    token: tokens.chr,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 389,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 388,\n    lpSymbol: 'CYC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\n    },\n    token: tokens.cyc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 387,\n    lpSymbol: 'XEND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\n    },\n    token: tokens.xend,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 296,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 386,\n    lpSymbol: 'HOTCROSS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\n    },\n    token: tokens.hotcross,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 385,\n    lpSymbol: 'RFOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\n    },\n    token: tokens.rfox,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 384,\n    lpSymbol: 'WMASS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\n    },\n    token: tokens.wmass,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 383,\n    lpSymbol: 'UBXT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\n    },\n    token: tokens.ubxt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 381,\n    lpSymbol: 'BTR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\n    },\n    token: tokens.btr,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 380,\n    lpSymbol: 'τDOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\n    },\n    token: tokens.τdoge,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 379,\n    lpSymbol: 'PMON-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\n    },\n    token: tokens.pmon,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 378,\n    lpSymbol: 'ONE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\n    },\n    token: tokens.one,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 377,\n    lpSymbol: 'FINE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\n    },\n    token: tokens.fine,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 376,\n    lpSymbol: 'DOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xac109c8025f272414fd9e2faa805a583708a017f',\n    },\n    token: tokens.doge,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 310,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 375,\n    lpSymbol: 'OIN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\n    },\n    token: tokens.oin,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 374,\n    lpSymbol: 'HYFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\n    },\n    token: tokens.hyfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 373,\n    lpSymbol: 'KUN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\n    },\n    token: tokens.kun,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 372,\n    lpSymbol: 'KUN-QSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\n    },\n    token: tokens.kun,\n    quoteToken: tokens.qsd,\n  },\n  {\n    pid: 371,\n    lpSymbol: 'MATH-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\n    },\n    token: tokens.math,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 370,\n    lpSymbol: 'mCOIN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\n    },\n    token: tokens.mcoin,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 369,\n    lpSymbol: 'WIN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\n    },\n    token: tokens.win,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 368,\n    lpSymbol: 'TRX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\n    },\n    token: tokens.trx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 367,\n    lpSymbol: 'BTT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\n    },\n    token: tokens.btt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 366,\n    lpSymbol: 'PNT-pBTC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\n    },\n    token: tokens.pnt,\n    quoteToken: tokens.pbtc,\n  },\n  {\n    pid: 311,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 365,\n    lpSymbol: 'BTCB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 364,\n    lpSymbol: 'LMT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\n    },\n    token: tokens.lmt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 363,\n    lpSymbol: 'DFD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\n    },\n    token: tokens.dfd,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 362,\n    lpSymbol: 'ALPACA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\n    },\n    token: tokens.alpaca,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 361,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 304,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 360,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 359,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 358,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 357,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 356,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 355,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 354,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 353,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 352,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 351,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 350,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 349,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 348,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 347,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 346,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 345,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 344,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 343,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 342,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 341,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 340,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 339,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 338,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 337,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 336,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 334,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 333,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 332,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 331,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 330,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 329,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 328,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 327,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 326,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 325,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 324,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 323,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 322,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 321,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 320,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 319,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x853784B7BDe87d858555715c0123374242db7943',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 318,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 317,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 316,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 315,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 314,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 313,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 312,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 309,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 308,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 307,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 306,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 305,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 303,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 302,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 301,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 300,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 299,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 298,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 297,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 295,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 294,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 293,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05faf555522Fa3F93959F86B41A3808666093210',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 292,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 291,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 290,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 289,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 288,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 287,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 286,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 285,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 284,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 283,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 282,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 281,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 280,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 279,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 278,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 277,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 276,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 275,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 274,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 273,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 272,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 271,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 270,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 269,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 268,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 267,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 266,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 265,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 264,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 263,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 262,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 261,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 260,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 259,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 258,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 257,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 256,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 255,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 254,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 253,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V2 farms, set to be removed once unstaked\n   */\n  {\n    pid: 139,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 250,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 193,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 249,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 248,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 247,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 246,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 245,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 244,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 243,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 242,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 241,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 240,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 239,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 238,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 237,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 236,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 235,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 234,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 233,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 232,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 231,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 230,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 229,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 228,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 227,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 226,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 225,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 224,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 223,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 222,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe3D941e74141311436F82523817EBaa26462967d',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 221,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 220,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 219,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 218,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 217,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 216,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 215,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 214,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 213,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 212,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 211,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 210,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 209,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 208,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 207,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 206,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 205,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 204,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 203,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 202,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 201,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 200,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 199,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 198,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 197,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 196,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 195,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 194,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 192,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 191,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 190,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 189,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 188,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 187,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 186,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 185,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 184,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 183,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 182,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 181,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2c065E42B464ef38480778B0624A207A09042481',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 180,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 179,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 178,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 177,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 176,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 175,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 174,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 173,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 172,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 171,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 170,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 169,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 168,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 167,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 166,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 165,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 164,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 163,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 162,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 161,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 160,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 159,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 158,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 157,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 156,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 155,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\n    },\n    token: tokens.yfii,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 154,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 153,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 152,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 151,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 150,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 149,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 148,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 147,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 146,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 145,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 144,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x082A80b3a55BD3B320a16678784186a979882b21',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 143,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 142,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x473390697036E7611a670575eA9141583471fF47',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 141,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 140,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * All farms below here are from v1 and are to be set to 0x\n   */\n  {\n    pid: 1,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 136,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 76,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 135,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 134,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 133,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 132,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 131,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 130,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 129,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 128,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 127,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 125,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x890479844484D67e34B99e1BBc1468231b254c08',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 124,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 123,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 122,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 121,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 120,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 119,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 118,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 117,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61376b56ff33c618b115131712a4138f98810a6a',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 116,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 115,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 114,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 113,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 112,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 111,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 110,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 109,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcd14855150335AAE984aa6D281E090c27035C692',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 108,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 107,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 106,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 104,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 103,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 102,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 101,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 100,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 99,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 98,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 97,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 96,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 95,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 94,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 93,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 92,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 91,\n    lpSymbol: 'NULS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 90,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 89,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 88,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 87,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 86,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 85,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 84,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 83,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 82,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 81,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 80,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 79,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 78,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 77,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 75,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 74,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 73,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 72,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0392957571f28037607c14832d16f8b653edd472',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 71,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 70,\n    lpSymbol: 'BETH-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n    },\n    token: tokens.beth,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 69,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 68,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 67,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 66,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 65,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 63,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 62,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 61,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 60,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF609ade3846981825776068a8eD7746470029D1f',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 59,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 58,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 57,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 56,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 55,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 54,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 53,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 52,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 51,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 50,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 49,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 46,\n    lpSymbol: 'OG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n    },\n    token: tokens.og,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 47,\n    lpSymbol: 'ASR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n    },\n    token: tokens.asr,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 48,\n    lpSymbol: 'ATM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n    },\n    token: tokens.atm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 45,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 44,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 43,\n    lpSymbol: 'JUV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n    },\n    token: tokens.juv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 42,\n    lpSymbol: 'PSG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n    },\n    token: tokens.psg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 39,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 41,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 40,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 37,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 12,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 13,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 14,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 15,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 16,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 17,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 18,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 19,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 20,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n    },\n    token: tokens.yfii,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 21,\n    lpSymbol: 'DAI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 22,\n    lpSymbol: 'XTZ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n    },\n    token: tokens.xtz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 23,\n    lpSymbol: 'BCH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n    },\n    token: tokens.bch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 24,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 25,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 26,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 27,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 29,\n    lpSymbol: 'USDC-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 30,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 32,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7793870484647a7278907498ec504879d6971EAb',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 34,\n    lpSymbol: 'STAX-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n    },\n    token: tokens.stax,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 35,\n    lpSymbol: 'NAR-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n    },\n    token: tokens.nar,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 36,\n    lpSymbol: 'NYA-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2730bf486d658838464a4ef077880998d944252d',\n    },\n    token: tokens.nya,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 38,\n    lpSymbol: 'bROOBEE-CAKE LP',\n    lpAddresses: {\n      97: '',\n      56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'BAKE-BNB Bakery LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n    },\n    token: tokens.bake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'BURGER-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n    },\n    token: tokens.burger,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'BAKE-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n    },\n    token: tokens.bake,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default farms\n"],"sourceRoot":""}